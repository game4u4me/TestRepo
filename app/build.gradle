plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "org.jetbrains.dokka"
    id 'dagger.hilt.android.plugin'
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-parcelize"
}

android {
    compileSdkVersion AppConfig.compileSdkVersion
    buildToolsVersion AppConfig.buildToolsVersion

    defaultConfig {
        applicationId AppConfig.applicationId
        minSdkVersion AppConfig.minSdkVersion
        targetSdkVersion AppConfig.targetSdkVersion
        versionCode AppConfig.versionCode
        versionName AppConfig.versionName
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding true
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.time.ExperimentalTime"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }

}

tasks.dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            // don't link to android sdk
            noAndroidSdkLink.set(false)
            // hide the deprecated
            skipDeprecated.set(true)
            // show private properties
            includeNonPublic.set(true)
            // Suppress all inherited members that were not overridden in a given class.
            suppressInheritedMembers.set(true)
        }
    }
    outputDirectory.set(file("documentation/html"))
}

tasks.dokkaGfm.configure {
    dokkaSourceSets {
        named("main") {
            // don't link to android sdk
            noAndroidSdkLink.set(false)
            // hide the deprecated
            skipDeprecated.set(true)
            // show private properties
            includeNonPublic.set(true)
            // Suppress all inherited members that were not overridden in a given class.
            suppressInheritedMembers.set(true)
        }
    }
    outputDirectory.set(file("documentation/gfm"))
}

dependencies {

    // kotlin
    implementation Dependencies.kotlin
    implementation Dependencies.ktx

    // multidex
    implementation(Dependencies.multidex)

    // support libraries
    implementation(Support.material)
    implementation(Support.constraintLayout)
    implementation(Support.appCompat)

    // coroutine
    implementation(Dependencies.coroutineCore)
    implementation(Dependencies.coroutineAndroid)

    // networking
    implementation(Dependencies.retrofit)
    implementation(Dependencies.gsonConverter)
    implementation(Dependencies.okhttp)
    implementation(Dependencies.gson)

    // image
    implementation(Dependencies.glide)

    // logging
    implementation(Dependencies.timber)
    implementation(Dependencies.orhanobut)

    // di
    implementation(Dependencies.hilt)
    kapt(Dependencies.hiltCompiler)

    // jetpack libraries
    implementation(Jetpack.room)
    implementation(Jetpack.roomExt)
    kapt(Jetpack.roomCompiler)

    implementation(Jetpack.dataStore)

    implementation(Jetpack.lifecycleViewModel)
    implementation(Jetpack.lifecycleLiveData)

    implementation(Jetpack.workManger)

    implementation(Jetpack.navigation)
    implementation(Jetpack.navigationUi)

    implementation(Jetpack.transition)

    implementation(Jetpack.paging)

    // unit testing
    testImplementation UnitTest.testJunit
    testImplementation UnitTest.testTruth
    testImplementation UnitTest.testMockito

    // instrumentation testing
    androidTestImplementation InstrumentationTest.androidTestTruth
    androidTestImplementation InstrumentationTest.androidTestAndroidxTestRule
    androidTestImplementation InstrumentationTest.androidTestAndroidxTestRunner
    androidTestImplementation InstrumentationTest.androidTestAndroidxTestJunitExt
    androidTestImplementation InstrumentationTest.androidTestAndroidxTestExtKtx
    androidTestImplementation InstrumentationTest.androidTestEspressoCore
    androidTestImplementation InstrumentationTest.androidTestHilt
    androidTestImplementation InstrumentationTest.androidTestRoom
    androidTestImplementation InstrumentationTest.androidTestWorkManager

}